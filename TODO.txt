

0.9. consider passing tilestack to the render function
0.99. consider making a sprite selector class that can be dynamically specified during creation of tiles.
    - it would handle sprite selection based on desired tile aspects or some other source (quantity based, weighted)
    - relies on events that tile gets, for example when instantiated, or quantity changed.
    - must also take current sprite so in case it does not know what to do (or wants to do nothing) it can return current sprite
1. consider moving maxQuantity to model
2. Mimic tile classes design for entities
2.5. rename commondata to shareddata

3. Do prefabs for entities too and use Component for entities


7. Clear world generation code

8. EquipmentPecieModel with AttributeSet of attributes
8.1 AttributeSet is a sorted flat map of pairs (attrid, value)

11. Do proper logging.
13. Clean member ordering and use automatic objects wherever possible.
15. Pass RenderStates by CONST reference
19. Make camera like the one in Carcassone. Move there everything involving camera (for example conversion between coordinates)

22. Simplified sprite system
    a) mostly done, just need to hook it up and scrap the old system

23. Maybe convert from pixel units to tile units. (1 tile is 32 pixels)


24. player's line of sight using raycasting

25. Consider storing normal textures and meta textures in one texture side to side